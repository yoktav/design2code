/// Grid system
//
// Generate semantic grid columns with these mixins.

=make-container($gutter: $grid-gutter-width)
  width: 100%
  padding-right: $gutter / 2
  padding-left: $gutter / 2
  margin-right: auto
  margin-left: auto

// For each breakpoint, define the maximum width of the container in a media query
=make-container-max-widths($max-widths: $container-max-widths, $breakpoints: $grid-breakpoints)
  @each $breakpoint, $container-max-width in $max-widths
    +media-breakpoint-up($breakpoint, $breakpoints)
      max-width: $container-max-width

=make-row($gutter: $grid-gutter-width)
  display: flex
  flex-wrap: wrap
  margin-right: -$gutter / 2
  margin-left: -$gutter / 2

=make-col-ready($gutter: $grid-gutter-width)
  position: relative
  // Prevent columns from becoming too narrow when at smaller grid tiers by
  // always setting `width: 100%;`. This works because we use `flex` values
  // later on to override this initial width.
  width: 100%
  padding-right: $gutter / 2
  padding-left: $gutter / 2

=make-col($size, $columns: $grid-columns)
  flex: 0 0 percentage($size / $columns)
  // Add a `max-width` to ensure content within each column does not blow out
  // the width of the column. Applies to IE10+ and Firefox. Chrome and Safari
  // do not appear to require this.
  max-width: percentage($size / $columns)

=make-col-offset($size, $columns: $grid-columns)
  $num: $size / $columns
  margin-left: if($num == 0, 0, percentage($num))

// Container widths
//
// Set the container width, and override it for fixed navbars in media queries.

@if $enable-grid-classes
  .container
    +make-container
    +make-container-max-widths

// Fluid container
//
// Utilizes the mixin meant for fixed width containers, but with 100% width for
// fluid, full width layouts.

@if $enable-grid-classes
  .container-fluid
    +make-container

// Row
//
// Rows contain and clear the floats of your columns.

@if $enable-grid-classes
  .row
    +make-row
  // Remove the negative margin from default .row, then the horizontal padding
  // from all immediate children columns (to prevent runaway style inheritance).
  .no-gutters
    margin-right: 0
    margin-left: 0
    > .col,
    > [class*="col-"]
      padding-right: 0
      padding-left: 0

// Columns
//
// Common styles for small and large grid columns

@if $enable-grid-classes
  +make-grid-columns